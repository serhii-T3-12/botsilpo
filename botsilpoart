import sqlite3
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

# üîπ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π)
TOKEN = "YOUR_TELEGRAM_BOT_TOKEN"

# üîπ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
conn = sqlite3.connect("products.db")
cursor = conn.cursor()

# üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ (—è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
cursor.execute('''CREATE TABLE IF NOT EXISTS products (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    name TEXT UNIQUE,
                    article TEXT UNIQUE)''')
conn.commit()

# üîπ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def start_command(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É, —ñ —è –∑–Ω–∞–π–¥—É –π–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª.")

@dp.message_handler()
async def find_article(message: Message):
    product_name = message.text.strip()
    cursor.execute("SELECT article FROM products WHERE name = ?", (product_name,))
    result = cursor.fetchone()
    
    if result:
        await message.reply(f"–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä—É '{product_name}': {result[0]}")
    else:
        await message.reply("–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
