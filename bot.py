import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

TOKEN = "7861897815:AAFByfkNqSIWIauet7k0lyS80SgiuqWPDhw"  # –¢–≤—ñ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ë–∞–∑–∞ —Ç–æ–≤–∞—Ä—ñ–≤ (–Ω–∞–∑–≤–∞ ‚Üí –∞—Ä—Ç–∏–∫—É–ª)
PRODUCTS = {
    "—Å–∞–ª–∞—Ç –∞–π–∑–±–µ—Ä–≥": "540258",
    "–ø–æ–º—ñ–¥–æ—Ä–∏ —á–µ—Ä—ñ": "123456",
    "–æ–≥—ñ—Ä–æ–∫ —Å–≤—ñ–∂–∏–π": "789012",
    "–±–∞–Ω–∞–Ω–∏": "345678"
}

# üìå –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É, —ñ —è –∑–Ω–∞–π–¥—É –π–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª üîç")

# üìå –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /list (—Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤)
@dp.message_handler(commands=['list'])
async def send_product_list(message: Message):
    product_list = "\n".join([f"üîπ {name}" for name in PRODUCTS.keys()])
    await message.reply(f"–û—Å—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤:\n{product_list}")

# üìå –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ—à—É–∫—É –∞—Ä—Ç–∏–∫—É–ª–∞
@dp.message_handler()
async def find_product(message: Message):
    query = message.text.lower().strip()
    for name, article in PRODUCTS.items():
        if query in name:  # –ü–æ—à—É–∫ –∑–∞ —á–∞—Å—Ç–∫–æ–≤–∏–º –∑–±—ñ–≥–æ–º
            await message.reply(f"‚úÖ {name.capitalize()} ‚Äì –ê—Ä—Ç–∏–∫—É–ª: {article}")
            return
    await message.reply("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å–ø—Ä–æ–±—É–π —ñ–Ω—à—É –Ω–∞–∑–≤—É.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)

