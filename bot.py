import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import Message

TOKEN = "7861897815:AAFByfkNqSIWIauet7k0lyS80SgiuqWPDhw"

bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ—à—É–∫—É
user_searching = {}

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –±–æ—Ç.")

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /list
@dp.message(Command("list"))
async def list_command(message: Message):
    commands = "/start - –ü–æ—á–∞—Ç–∏\n/list - –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏\n/search - –ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é"
    await message.answer(f"–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n{commands}")

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /search
@dp.message(Command("search"))
async def search_command(message: Message):
    user_searching[message.from_user.id] = True
    await message.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É –¥–ª—è –ø–æ—à—É–∫—É.")

# –û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (—è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É —Ä–µ–∂–∏–º—ñ –ø–æ—à—É–∫—É)
@dp.message()
async def handle_text(message: Message):
    user_id = message.from_user.id
    if user_searching.get(user_id):
        query = message.text.lower()
        
        # –Ü–º—ñ—Ç–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        fake_database = ["–∞–π–∑–±–µ—Ä–≥", "–º–æ–ª–æ–∫–æ", "—Ö–ª—ñ–±", "—è–±–ª—É–∫–æ"]
        
        if query in fake_database:
            response = f"üîç –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä: {query.capitalize()}"
        else:
            response = "‚ùå –¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

        await message.answer(response)
        user_searching[user_id] = False  # –í–∏–º–∏–∫–∞—î–º–æ —Ä–µ–∂–∏–º –ø–æ—à—É–∫—É

async def main():
    logging.basicConfig(level=logging.INFO)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

